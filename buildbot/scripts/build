#!/bin/bash

set -x
set -e

JOBID=$1
ARTIFACTS=$2
CONFIGFILE=$3
DEFAULTDOCKERIMAGE=bbb/buster

if [ -z "${JOBID}" -o -z "${CONFIGFILE}" ]; then
	echo "Need jobid and config file"
	exit 1
fi
if [ ! -s "${CONFIGFILE}" ]; then
	echo "Config file does not exist or is empty"
	exit 1
fi

BASE=$(readlink -f $(dirname $(readlink -f $0))/..)
HOSTNAME=$(hostname)
TREECACHE=${BASE}/treecache
EXITCODE=1

. ${BASE}/config/buildhost-default 
if [ -f ${BASE}/config/buildhost-${HOSTNAME} ]; then
	. ${BASE}/config/buildhost-${HOSTNAME}
fi

updatetree() {

	# Get tree from config file and make it fs flat
	# for example
	#
	# git://git.kernel.org/pub/scm/linux/kernel/git/mips/linux.git
	# git---git-kernel-org-pub-scm-linux-kernel-git-mips-linux-git
	#
	# and then update the tree by pulling if it exists or clone it
	# 
	GITTREE=$(jq -r .gittree <${CONFIGFILE})
	TREENAME=$(echo -n ${GITTREE} | tr -c 'a-z' '-')

	if [ ! -d ${TREECACHE}/${TREENAME} ]; then
		git clone --bare ${GITTREE} ${TREECACHE}/${TREENAME} 
	else
		pushd ${TREECACHE}/${TREENAME}
		git fetch --all
		popd
	fi
}

rundocker() {

	DOCKERIMAGE=$(jq -r .dockerimage <${CONFIGFILE})

	if [ "${DOCKERIMAGE}" = "null" ]; then
		DOCKERIMAGE=${DEFAULTDOCKERIMAGE}
	fi

	set +e

	time docker run \
			--rm \
			-it \
			-v ${BASE}/treecache:/treecache \
			-v ${BASE}/config:/config \
			-v ${ARTIFACTS}:/artifacts \
			-v ${BASE}/scripts:/scripts \
			-e TREECACHEDIR=/treecache \
			-e BUILDHOST=$(hostname) \
			-e JOBID=${JOBID} \
			${DOCKERIMAGE} \
			/scripts/buildindocker 

	EXITCODE=$?

	set -e
}

[ -d ${BASE}/treecache ] || mkdir -p ${BASE}/treecache
[ -d ${BASE}/config/build ] || mkdir -p ${BASE}/config/build

cp ${CONFIGFILE} ${BASE}/config/build/${JOBID}

updatetree
rundocker

rm -f ${BASE}/config/build/${JOBID}

exit $EXITCODE
